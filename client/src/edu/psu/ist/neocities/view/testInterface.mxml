

<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="514">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import com.pnwrain.easyCG.events.ControlEvent;
			import com.pnwrain.easyCG.model.ModelFactory;
			
			import edu.psu.ist.neocities.model.InformationModel;
			import edu.psu.ist.neocities.model.LocationModel;
			import edu.psu.ist.neocities.model.RoleModel;
			import edu.psu.ist.neocities.model.UnitModel;
			import edu.psu.ist.neocities.value.*;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
		
			[Bindable]
			var lModel : LocationModel = ModelFactory.getModel("LocationModel") as LocationModel;
			
			private function displayUnits():void {
				
				var uModel : UnitModel = ModelFactory.getModel("UnitModel") as UnitModel;
				var rModel :RoleModel = ModelFactory.getModel("RoleModel") as RoleModel;
				
				unitBox.text = rModel.printAvailablePlayerUnits();
				
			}
			
			private function displayDispatchedUnits(): void{
				
				var rModel :RoleModel = ModelFactory.getModel("RoleModel") as RoleModel;
				
				this.unitBoxDispatched.text = rModel.printDispatchedPlayerUnits();
				
			}
			
			private function displayInformation():void {
				
				var iModel : InformationModel = ModelFactory.getModel("InformationModel") as InformationModel;
				
				infoBox.text = iModel.printCurrentInformation();
				
			}
			
			private function displayLocations():void {
				
				var lModel : LocationModel = ModelFactory.getModel("LocationModel") as LocationModel;
				
				locationBox.text = lModel.printLocations();
				
			}
			
			
			private function dispatchResources() : void {
				
				
				
				var ErrorEvent : ControlEvent = new ControlEvent('alert');
				var dispatchEvent : ControlEvent = new ControlEvent('evt_dispatch');
				
				var uModel : UnitModel = ModelFactory.getModel("UnitModel") as UnitModel;
				
				
				var unitAdded : UnitVO;
				
				for each(var u : UnitVO in uModel.data){
					
					if(u.badgeNo.toString() == unitEntry.text){
					 unitAdded = u; 
					 break;
					}
				} // ending for
				
				if (unitAdded == null)
				{
					Alert.show("Invalid  Unit")
				}
				
				var unitList : ArrayCollection = new ArrayCollection();
				
				unitList.addItem(unitAdded);
				
				
				// Set the LocationModel's SelectedLocation attribute based on text entry..
				
				lModel.selectedLocation = lModel.getLocation(parseInt(locationEntry.text));
							
				dispatchEvent.data = unitList; 
				dispatchEvent.dispatch();
						  	
				
			} // dispatchResources()
				
		]]>
	</fx:Script>
	
	
	
	<s:VGroup id="mainScreen" width="100%" height="100%" horizontalAlign="center" paddingBottom="0"
			  paddingLeft="0" paddingRight="0" paddingTop="0" verticalAlign="middle">
		<s:BorderContainer x="31" y="20" width="642" height="490">
			<s:Button x="35" y="191" width="151" height="29" id="b1" label="Populate Units" click="this.displayUnits()"/>
			<s:Button x="21" y="399" width="182" height="43" id="b0" label="Populate Dispatched Units" click="this.displayDispatchedUnits()"/>
			<s:Button x="196" y="341" width="155" height="28" id="b4" label="Dispatch to Location" click="dispatchResources()"/>
			<s:TextArea id="unitBox" x="35" y="16" width="153" height="167" text="All Units"/>
			<s:TextArea id="unitBoxDispatched" x="35" y="234" width="153" height="156" text="Dispatched Units"/>
			<s:TextArea id="unitEntry" x="197" y="314" width="154" height="21" text="BadgeNo"/>
			<s:TextArea id="locationEntry" x="359" y="314" width="153" height="21" text="LocationID"/>
			<s:TextArea id="infoBox" x="202" y="16" width="149" height="167" text="Information Sent"/>
			<s:TextArea id="locationBox" x="367" y="16" width="149" height="167" text="Locations"/>
			<s:Button x="204" y="191" width="147" height="29" id="b2" label="Populate Information" click = "this.displayInformation()"/>
			<s:Button x="369" y="191" width="147" height="29" id="b3" label="Populate Locations" click = "this.displayLocations()"/>
		</s:BorderContainer>
	</s:VGroup>  
</s:Group>
